name: Lint
on:
  push:
    paths:
      - '**/'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: fmt
      uses: actions-rs/cargo@v1
      continue-on-error: false
      with:
        command: fmt
        args: --all -- --check
    - name: clippy
      uses: actions-rs/cargo@v1
      continue-on-error: false
      with:
        command: clippy
        args: -- -D warnings
    
  publish-to-github:
    name: Publish to Github
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        include:
        - build: arm-v7
          os: ubuntu-latest
          rust: stable
          target: armv7-unknown-linux-gnueabihf
          linker: gcc-arm-linux-gnueabihf
          cross: true
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.rustup
          target
        key: ${{ runner.os }}-${{ matrix.rust }}
    - name: Install Linker
      if: matrix.cross
      run: |
        sudo apt update
        sudo apt install ${{ matrix.linker }}
        cat .cargo/config.github >> .cargo/config
    - name: Install Rust
      run: |
        rustup install ${{ matrix.rust }}
        rustup target add ${{ matrix.target }}
        rustup show
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
    - name: Package Artifacts
      run: |
        src=$(pwd)
        stage=
        case $RUNNER_OS in
            Linux)
                stage=$(mktemp -d)
                ;;
            macOS)
                stage=$(mktemp -d -t tmp)
                ;;
        esac
        cp target/${{ matrix.target }}/release/sysit $stage/
        cd $stage
        RELEASE_VERSION=${GITHUB_REF#refs/tags/}
        ASSET_NAME="sysit-$RELEASE_VERSION-${{ matrix.target }}.tar.gz"
        ASSET_PATH="$src/$ASSET_NAME"
        CHECKSUM_PATH="$ASSET_PATH.sha256"
        echo "ASSET_PATH=$ASSET_PATH" >> $GITHUB_ENV
        echo "CHECKSUM_PATH=$CHECKSUM_PATH" >> $GITHUB_ENV
        tar czf $ASSET_PATH *
        cd $src
        case $RUNNER_OS in
            Linux)
                sha256sum $ASSET_NAME > $CHECKSUM_PATH
                ;;
            macOS)
                shasum -a 256 $ASSET_NAME > $CHECKSUM_PATH
                ;;
        esac
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          ${{ env.ASSET_PATH }}
          ${{ env.CHECKSUM_PATH }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
